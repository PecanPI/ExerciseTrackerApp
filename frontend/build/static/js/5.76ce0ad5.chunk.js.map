{"version":3,"sources":["exercises/pages/UpdateExercise.js","shared/components/FormElements/Button.js","shared/util/validators.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js"],"names":["UpdateExercise","props","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedExercise","setLoadedExercise","exerciseId","useParams","eId","history","useHistory","Date","date","setDate","useForm","title","value","isValid","bodyLocation","reps","sets","weight","formState","inputHandler","setFormData","event","a","preventDefault","process","JSON","stringify","inputs","userId","Authorization","token","push","console","log","useEffect","responseData","exercise","Number","fetchExercise","className","onOverlay","onClear","onSubmit","id","type","label","element","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_NUMBER","selected","onChange","name","disabled","Button","href","size","inverse","danger","children","to","exact","onClick","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_PASSWORD_MATCH","VALIDTOR_TYPE_IS_NUMBER","VALIDATOR_MINLENGTH","val","VALIDATOR_PASSWORD","VALIDATOR_EMAIL","validate","validator","trim","length","isNaN","test","ErrorModal","onCancel","header","show","footer","setIsLoading","setError","activeHttpRequests","useRef","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","fetch","signal","response","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","Card","style","ModalOverlay","content","Fragment","headerClass","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","inputReducer","state","action","isTouched","Input","useReducer","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialValidity","inputData","formValidity"],"mappings":"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","file":"static/js/5.76ce0ad5.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\"\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { VALIDATOR_NUMBER, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport \"./ExerciseForm.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction UpdateExercise(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedExercise, setLoadedExercise] = useState();\r\n  const exerciseId = useParams().eId;\r\n  const history = useHistory();\r\n  \r\n  const [date, setDate] = useState(new Date());\r\n\r\n  function changeDate(date) {\r\n    setDate(date);\r\n  }\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      bodyLocation: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      reps: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      sets: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      weight: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  async function exerciseUpdateSubmitHandler(event) {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKENDURL}${\"/exercises\"}/exercises/${exerciseId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          bodyLocation: formState.inputs.bodyLocation.value,\r\n          reps: formState.inputs.reps.value,\r\n          sets: formState.inputs.sets.value,\r\n          weight: formState.inputs.weight.value,\r\n          date: date,\r\n          userId: auth.userId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(`/exercises/${auth.userId}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchExercise() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKENDURL}/exercises/${auth.userId}/${exerciseId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setLoadedExercise(responseData.exercise);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.exercise.title,\r\n              isValid: true,\r\n            },\r\n            bodyLocation: {\r\n              value: responseData.exercise.bodyLocation,\r\n              isValid: true,\r\n            },\r\n            reps: {\r\n              value: Number(responseData.exercise.reps),\r\n              isValid: true,\r\n            },\r\n            sets: {\r\n              value: Number(responseData.exercise.sets),\r\n              isValid: true,\r\n            },\r\n            weight: {\r\n              value: Number(responseData.exercise.weight),\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {\r\n          console.log(err);\r\n      }\r\n    }\r\n    fetchExercise();\r\n  }, [sendRequest, exerciseId, setFormData, auth]);\r\n\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner onOverlay />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedExercise && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find Exercise with that id!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {loadedExercise && (\r\n      <form className=\"exercise-form\" onSubmit={exerciseUpdateSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid Title\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedExercise.title}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"bodyLocation\"\r\n          label=\"Body Location\"\r\n          type=\"text\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a Body Location\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedExercise.bodyLocation}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"reps\"\r\n          label=\"Reps\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_NUMBER()]}\r\n          errorText=\"Value needs to be a number\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedExercise.reps}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"sets\"\r\n          label=\"Sets\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_NUMBER()]}\r\n          errorText=\"Value needs to be a number\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedExercise.sets}\r\n          initialValid={true}\r\n        />\r\n        <Input\r\n          id=\"weight\"\r\n          label=\"Weight (lbs)\"\r\n          element=\"input\"\r\n          validators={[VALIDATOR_NUMBER()]}\r\n          errorText=\"Value needs to be a number\"\r\n          onInput={inputHandler}\r\n          initialValue={loadedExercise.weight}\r\n          initialValid={true}\r\n        />\r\n        <div className=\"form-group\">\r\n          <DatePicker\r\n            id=\"date\"\r\n            label=\"Date\"\r\n            selected={date}\r\n            value={date}\r\n            onChange={changeDate}\r\n            name=\"date\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedExercise.date}\r\n          />\r\n        </div>\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          UPDATE EXERCISE\r\n        </Button>\r\n      </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateExercise;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nfunction Button (props) {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\nconst VALIDATOR_TYPE_PASSWORD_MATCH = 'MATCH';\r\nconst VALIDTOR_TYPE_IS_NUMBER = 'NUMBER';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_PASSWORD = val => ({\r\n  type: VALIDATOR_TYPE_PASSWORD_MATCH,\r\n  val: val\r\n})\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\nexport const VALIDATOR_NUMBER = () => ({ type: VALIDTOR_TYPE_IS_NUMBER });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if(validator.type === VALIDATOR_TYPE_PASSWORD_MATCH){\r\n      isValid = isValid && value.trim() === validator.val.trim()\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDTOR_TYPE_IS_NUMBER ) {\r\n      value = Number(value)\r\n      isValid = isValid && (!isNaN(value));\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\n\r\nexport function useHttpClient() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([])\r\n\r\n  const sendRequest = useCallback(async(url, method = \"GET\", body = null, headers = {})=> {\r\n    setIsLoading(true)\r\n    const httpAbortCtrl = new AbortController(); //aborts when page is changed\r\n    activeHttpRequests.current.push(httpAbortCtrl)\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n      const responseData = await response.json();\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl)\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      return responseData\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong, please try again\");\r\n      setIsLoading(false);\r\n      throw err\r\n    }\r\n    \r\n  }, [])\r\n\r\n  function clearError(){\r\n      setError(null)\r\n  }\r\n\r\n  useEffect(()=>{\r\n      return ()=>{ //cleanup function\r\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n      };\r\n  },[])\r\n\r\n  return {isLoading, error, sendRequest, clearError};\r\n}","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nfunction ModalOverlay(props) {\r\n  const content = (\r\n    <React.Fragment>\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n          <ModalOverlay {...props}/>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nfunction inputReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n      case \"TOUCH\":\r\n          return {\r\n              ...state,\r\n              isTouched: true\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false\r\n  });\r\n\r\n  const {id, onInput} = props\r\n  const{ value, isValid} = inputState;\r\n\r\n  useEffect(()=>{\r\n    onInput(id, value, isValid)\r\n  },[id, value, isValid, onInput])\r\n\r\n  function changeHandler(event) {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  }\r\n  function touchHandler(){\r\n    dispatch({\r\n        type :'TOUCH'\r\n    })\r\n  }\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`form-control ${\r\n          !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n        }`}\r\n      >\r\n        <label htmlFor={props.id}>{props.label} </label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;","import { useCallback, useReducer } from \"react\";\r\n\r\nfunction formReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      \r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function useForm(initialInputs, initialValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}"],"sourceRoot":""}