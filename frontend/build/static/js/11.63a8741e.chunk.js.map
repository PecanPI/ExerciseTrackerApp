{"version":3,"sources":["user/pages/SignUp.js"],"names":["SignUp","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","history","useHistory","useForm","email","value","isValid","password","formState","inputHandler","event","a","preventDefault","process","JSON","stringify","inputs","responseData","login","userId","token","push","console","log","onClear","className","asOverlay","id","element","type","label","validators","VALIDATOR_EMAIL","errorText","onInput","VALIDATOR_MINLENGTH","VALIDATOR_PASSWORD","disabled","onClick"],"mappings":"4QA2GeA,UAtFf,WACE,IAAMC,EAAOC,qBAAWC,KADR,EAEsCC,cAA9CC,EAFQ,EAERA,UAAWC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,YAAaC,EAFvB,EAEuBA,WACjCC,EAAUC,cAHA,EAIkBC,YAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,SAAU,CACRF,MAAO,GACPC,SAAS,KAGb,GAfc,mBAITE,EAJS,KAIEC,EAJF,iDAiBhB,WAA6BC,GAA7B,eAAAC,EAAA,6DACED,EAAME,iBADR,kBAG+Bb,EAAY,GAAD,OACjCc,gCADiC,iBAEpC,OACAC,KAAKC,UAAU,CACbX,MAAOI,EAAUQ,OAAOZ,MAAMC,MAC9BE,SAAUC,EAAUQ,OAAOT,SAASF,QAEtC,CACE,eAAgB,qBAXxB,OAGUY,EAHV,OAcIxB,EAAKyB,MAAMD,EAAaE,OAAQF,EAAaG,OAC7CnB,EAAQoB,KAAR,qBAA2BJ,EAAaE,SAf5C,gDAiBIG,QAAQC,IAAR,MAjBJ,0DAjBgB,sBAqChB,OACE,gCACE,cAAC,IAAD,CAAYzB,MAAOA,EAAO0B,QAASxB,IACnC,eAAC,IAAD,CAAMyB,UAAU,wBAAhB,UACG5B,GAAa,cAAC,IAAD,CAAgB6B,WAAS,IACvC,yCACA,uBACA,iCACE,cAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,QACRC,KAAK,QACLC,MAAM,SACNC,WAAY,CAACC,KACbC,UAAU,qCACVC,QAASzB,IAEX,cAAC,IAAD,CACEkB,GAAG,WACHC,QAAQ,QACRC,KAAK,WACLC,MAAM,WACNC,WAAY,CAACI,YAAoB,IACjCF,UAAU,sDACVC,QAASzB,IAGX,cAAC,IAAD,CACEkB,GAAG,uBACHC,QAAQ,QACRC,KAAK,WACLC,MAAM,mBACNC,WAAY,CAACK,YAAmB5B,EAAUQ,OAAOT,SAASF,QAC1D4B,UAAU,yBACVC,QAASzB,IAEX,cAAC,IAAD,CACEoB,KAAK,SACLQ,UAAW7B,EAAUF,QACrBgC,QA5EM,4CAyER,SAKG","file":"static/js/11.63a8741e.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_PASSWORD,\r\n} from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport \"./Auth.css\";\r\n\r\n/*\r\n *   Sign Up compenent\r\n */\r\nfunction SignUp() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const history = useHistory();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  async function submitHandler(event) {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKENDURL}/users/signup`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n          password: formState.inputs.password.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      auth.login(responseData.userId, responseData.token);\r\n      history.push(`/exercises/${responseData.userId}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication center\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Sign Up</h2>\r\n        <hr />\r\n        <form>\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL]}\r\n            errorText=\"Please enter a valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(8)]}\r\n            errorText=\"Please enter a valid password, atleast 8 characters\"\r\n            onInput={inputHandler}\r\n          />\r\n          \r\n          <Input\r\n            id=\"confrimationPassword\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Confirm Password\"\r\n            validators={[VALIDATOR_PASSWORD(formState.inputs.password.value)]}\r\n            errorText=\"Passwords do not match\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={!formState.isValid}\r\n            onClick={submitHandler}\r\n          >\r\n            {\"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"sourceRoot":""}