{"version":3,"sources":["exercises/components/ExerciseItem.js","exercises/components/ExerciseList.js","exercises/pages/UserExercises.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js"],"names":["ExerciseItem","props","date","Date","month","getMonth","getDate","getFullYear","Fragment","className","title","bodyLocation","reps","sets","weight","to","id","onClick","showWarning","ExerciseList","auth","useContext","AuthContext","useHttpClient","isLoading","error","clearError","sendRequest","useState","showConfirmModal","setShowConfirmModal","deleteExerciseId","setDeleteExerciseId","showDeleteWarningHandler","cancelDeleteWarningHandler","confirmDeleteHandler","a","process","userId","Authorization","token","onDeleteExercise","console","log","items","length","Card","Button","ErrorModal","onClear","Modal","show","onCancel","header","footerClass","footer","inverse","danger","LoadingSpinner","asOverlay","options","dropdownOptions","onChange","filter","placeholder","map","exercise","cancelWarning","UserExercises","loadedExercises","setLoadedExercises","allExercises","setAllExercises","uniqueBodyLocations","setUniqueBodyLocations","useEffect","responseData","exercises","sort","b","Set","fetchPlaces","onOverlay","prevExercise","filterSelection","value","href","size","children","exact","type","disabled","setIsLoading","setError","activeHttpRequests","useRef","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","style","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","ReactDOM","createPortal","document","getElementById","in","mountOnEnter","unmountOnExit","timeout","classNames"],"mappings":"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","file":"static/js/7.5872878e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ExerciseItem(props) {\r\n\r\n  let date = new Date(props.date);\r\n  let month = date.getMonth() + 1;\r\n  date = date.getDate() + \"/\" + month + \"/\" + date.getFullYear();\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr\r\n        className=\"exercise-row center\"\r\n      >\r\n        <td className=\"exercise-column\">{props.title}</td>\r\n        <td className=\"exercise-column\">{props.bodyLocation}</td>\r\n        <td className=\"exercise-column\">{props.reps}</td>\r\n        <td className=\"exercise-column\">{props.sets}</td>\r\n        <td className=\"exercise-column\">{props.weight}</td>\r\n        <td className=\"exercise-column\">{date}</td>\r\n        <td className=\"exercise-column links\">\r\n          <Link to={`/exercises/update/${props.id}`}> Edit </Link><p></p>\r\n          <Link to=\"#\" onClick={() =>{\r\n            const id = props.id\r\n            props.showWarning(id)}}>\r\n            Delete\r\n          </Link>\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ExerciseItem;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport ExerciseItem from \"./ExerciseItem\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nfunction ExerciseList(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [deleteExerciseId, setDeleteExerciseId] = useState();\r\n\r\n  function showDeleteWarningHandler(id) {\r\n    setDeleteExerciseId(id);\r\n    setShowConfirmModal(true);\r\n  }\r\n  function cancelDeleteWarningHandler() {\r\n    setShowConfirmModal(false);\r\n  }\r\n\r\n\r\n  async function confirmDeleteHandler() {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKENDURL}${\"/exercises/\"}${\r\n          auth.userId\r\n        }/${deleteExerciseId}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDeleteExercise(deleteExerciseId);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  // if user hasnt created an exercise prompt to go to page;\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"exercise-list center\">\r\n        <Card>\r\n          <h2> No exercises found. Create one?</h2>\r\n          <Button to=\"/exercises/create/\"> New Exercise </Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {showConfirmModal && (\r\n        <Modal\r\n          show={showConfirmModal}\r\n          onCancel={cancelDeleteWarningHandler}\r\n          header=\"Are you sure?\"\r\n          footerClass=\"place-item__modal-actions\"\r\n          footer={\r\n            <React.Fragment>\r\n              <Button inverse onClick={cancelDeleteWarningHandler}>\r\n                {\" \"}\r\n                CANCEL{\" \"}\r\n              </Button>\r\n              <Button danger onClick={confirmDeleteHandler}>\r\n                {\" \"}\r\n                DELETE{\" \"}\r\n              </Button>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <p>Would you like to Delete this Exercise?</p>\r\n        </Modal>\r\n      )}\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <Dropdown\r\n        options={props.dropdownOptions}\r\n        onChange={props.filter}\r\n        // value={defaultOption}\r\n        placeholder=\"Filter\"\r\n      />\r\n      <table className=\"exercise-table\">\r\n        <thead>\r\n          <tr className=\"exercise-row title center\">\r\n            <th className=\"exercise-column\">Exercise</th>\r\n            <th className=\"exercise-column\">Body Location</th>\r\n            <th className=\"exercise-column\">Reps</th>\r\n            <th className=\"exercise-column\">Sets</th>\r\n            <th className=\"exercise-column\">Weight (lbs)</th>\r\n            <th className=\"exercise-column\">Date</th>\r\n            <th className=\"exercise-column\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.items.map((exercise) => (\r\n            <ExerciseItem\r\n              className=\"exercise-item center\"\r\n              key={exercise.id}\r\n              id={exercise.id}\r\n              title={exercise.title}\r\n              bodyLocation={exercise.bodyLocation}\r\n              reps={exercise.reps}\r\n              sets={exercise.sets}\r\n              weight={exercise.weight}\r\n              date={exercise.date}\r\n              showWarning={showDeleteWarningHandler}\r\n              cancelWarning={cancelDeleteWarningHandler}\r\n              confirmDeleteHandler={confirmDeleteHandler}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Button to={`/exercises/create`}> New Exercise </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExerciseList;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport ExerciseList from \"../components/ExerciseList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport \"./ExerciseForm.css\";\r\n\r\n/*\r\n * Gets all user exercises and displays\r\n */\r\nfunction UserExercises() {\r\n  const [loadedExercises, setLoadedExercises] = useState();\r\n  const [allExercises, setAllExercises] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [uniqueBodyLocations, setUniqueBodyLocations] = useState();\r\n  const auth = useContext(AuthContext);\r\n\r\n  function exerciseDeleteHandler(deleteExerciseId) {\r\n    setLoadedExercises((prevExercise) =>\r\n      prevExercise.filter((exercises) => exercises.id !== deleteExerciseId)\r\n    );\r\n  }\r\n\r\n  function filterHandler(filterSelection) {\r\n    if (filterSelection.value === \"all\") {\r\n        setLoadedExercises(allExercises)\r\n    } else {\r\n      setLoadedExercises(\r\n        allExercises.filter(\r\n          (exercise) => exercise.bodyLocation === filterSelection.value\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchPlaces() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKENDURL}/exercises/${auth.userId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        //sorts exercises, newest by date first\r\n        let exercises = responseData.exercises.sort((a, b) => {\r\n          if (a.date >= b.date) return -1;\r\n          if (a.date < b.date) return 1;\r\n          return -1;\r\n        });\r\n        setLoadedExercises(exercises);\r\n        setAllExercises(exercises);\r\n        setUniqueBodyLocations([\r\n            ...new Set(exercises.map((exercise) => exercise.bodyLocation)),\r\n            \"all\",\r\n          ]);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchPlaces();\r\n  }, [sendRequest, auth.userId, auth.token]);\r\n\r\n  return (\r\n    <div>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner onOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedExercises && (\r\n        <ExerciseList\r\n          items={loadedExercises}\r\n          onDeleteExercise={exerciseDeleteHandler}\r\n          filter={filterHandler}\r\n          dropdownOptions = {uniqueBodyLocations}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserExercises;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nfunction Button (props) {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\n\r\nexport function useHttpClient() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([])\r\n\r\n  const sendRequest = useCallback(async(url, method = \"GET\", body = null, headers = {})=> {\r\n    setIsLoading(true)\r\n    const httpAbortCtrl = new AbortController(); //aborts when page is changed\r\n    activeHttpRequests.current.push(httpAbortCtrl)\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal\r\n      });\r\n      const responseData = await response.json();\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl)\r\n      if (!response.ok) {\r\n        throw new Error(responseData.message);\r\n      }\r\n      setIsLoading(false);\r\n      return responseData\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong, please try again\");\r\n      setIsLoading(false);\r\n      throw err\r\n    }\r\n    \r\n  }, [])\r\n\r\n  function clearError(){\r\n      setError(null)\r\n  }\r\n\r\n  useEffect(()=>{\r\n      return ()=>{ //cleanup function\r\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n      };\r\n  },[])\r\n\r\n  return {isLoading, error, sendRequest, clearError};\r\n}","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nfunction ModalOverlay(props) {\r\n  const content = (\r\n    <React.Fragment>\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n          <ModalOverlay {...props}/>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;"],"sourceRoot":""}